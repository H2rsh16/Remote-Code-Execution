{"ast":null,"code":"var _jsxFileName = \"D:\\\\remote-execution-system\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getIsAuthenticated, setIsAuthenticated } from \"./pages/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet condition = true;\nconst App = () => {\n  _s();\n  useEffect(() => {\n    // Define the function you want to run continuously\n    const myFunction = () => {\n      condition = setIsAuthenticated();\n      // You can add more logic here\n    };\n\n    // Set up the interval to run the function every second (1000 ms)\n    const intervalId = setInterval(myFunction, 1000);\n\n    // Clear the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []); // Empty dependency array means this effect runs once on mount\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: condition ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Routes","Route","Navigate","Login","Home","Register","ToastContainer","getIsAuthenticated","setIsAuthenticated","jsxDEV","_jsxDEV","condition","App","_s","myFunction","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["D:/remote-execution-system/src/App.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Home from \"./pages/Home\"\r\nimport Register from \"./pages/Register\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getIsAuthenticated, setIsAuthenticated } from \"./pages/Auth\";\r\n\r\nlet condition = true;\r\n\r\nconst App = () =>{\r\n    \r\n    useEffect(() => {\r\n        // Define the function you want to run continuously\r\n        const myFunction = () => {\r\n            condition = setIsAuthenticated()\r\n            // You can add more logic here\r\n        };\r\n\r\n        // Set up the interval to run the function every second (1000 ms)\r\n        const intervalId = setInterval(myFunction, 1000);\r\n\r\n        // Clear the interval on component unmount\r\n        return () => clearInterval(intervalId);\r\n    }, []); // Empty dependency array means this effect runs once on mount\r\n    return (\r\n            <BrowserRouter>\r\n                <ToastContainer/>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Login />} />\r\n                    <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n                    <Route path=\"/register\" element={<Register />} />\r\n                    <Route element={condition ? <Home /> : <Navigate to=\"/\" />} />\r\n                </Routes>\r\n            </BrowserRouter>\r\n    )\r\n}\r\n\r\n\r\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,uCAAuC;AAC9C,SAASC,kBAAkB,EAAEC,kBAAkB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,IAAIC,SAAS,GAAG,IAAI;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAEbf,SAAS,CAAC,MAAM;IACZ;IACA,MAAMgB,UAAU,GAAGA,CAAA,KAAM;MACrBH,SAAS,GAAGH,kBAAkB,CAAC,CAAC;MAChC;IACJ,CAAC;;IAED;IACA,MAAMO,UAAU,GAAGC,WAAW,CAACF,UAAU,EAAE,IAAI,CAAC;;IAEhD;IACA,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,oBACQL,OAAA,CAACX,aAAa;IAAAmB,QAAA,gBACVR,OAAA,CAACJ,cAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjBZ,OAAA,CAACV,MAAM;MAAAkB,QAAA,gBACHR,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACP,KAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCZ,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEd,OAAA,CAACR,QAAQ;UAACuB,EAAE,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDZ,OAAA,CAACT,KAAK;QAACsB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEd,OAAA,CAACL,QAAQ;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDZ,OAAA,CAACT,KAAK;QAACuB,OAAO,EAAEb,SAAS,gBAAGD,OAAA,CAACN,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGZ,OAAA,CAACR,QAAQ;UAACuB,EAAE,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE5B,CAAC;AAAAT,EAAA,CA1BKD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA6BT,eAAeA,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}